//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegisterApiCallerForm.CompanyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parameter", Namespace="http://schemas.datacontract.org/2004/07/ilenc.NationalCodeWCF.LegalPersonService")]
    [System.SerializableAttribute()]
    public partial class Parameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCode {
            get {
                return this.NationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalCodeField, value) != true)) {
                    this.NationalCodeField = value;
                    this.RaisePropertyChanged("NationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/ilenc.NationalCodeWCF.LegalPersonService")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RegisterApiCallerForm.CompanyServiceReference.Result[] BranchListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreakUpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstablishmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FollowUpNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBreakUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSettleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalPersonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RegisterApiCallerForm.CompanyServiceReference.Result ParentLegalPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisterDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisterNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisterUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RegisterApiCallerForm.CompanyServiceReference.Result[] BranchList {
            get {
                return this.BranchListField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchListField, value) != true)) {
                    this.BranchListField = value;
                    this.RaisePropertyChanged("BranchList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BreakUpDate {
            get {
                return this.BreakUpDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BreakUpDateField, value) != true)) {
                    this.BreakUpDateField = value;
                    this.RaisePropertyChanged("BreakUpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstablishmentDate {
            get {
                return this.EstablishmentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EstablishmentDateField, value) != true)) {
                    this.EstablishmentDateField = value;
                    this.RaisePropertyChanged("EstablishmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FollowUpNo {
            get {
                return this.FollowUpNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FollowUpNoField, value) != true)) {
                    this.FollowUpNoField = value;
                    this.RaisePropertyChanged("FollowUpNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBranch {
            get {
                return this.IsBranchField;
            }
            set {
                if ((this.IsBranchField.Equals(value) != true)) {
                    this.IsBranchField = value;
                    this.RaisePropertyChanged("IsBranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBreakUp {
            get {
                return this.IsBreakUpField;
            }
            set {
                if ((this.IsBreakUpField.Equals(value) != true)) {
                    this.IsBreakUpField = value;
                    this.RaisePropertyChanged("IsBreakUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSettle {
            get {
                return this.IsSettleField;
            }
            set {
                if ((this.IsSettleField.Equals(value) != true)) {
                    this.IsSettleField = value;
                    this.RaisePropertyChanged("IsSettle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastChangeDate {
            get {
                return this.LastChangeDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastChangeDateField, value) != true)) {
                    this.LastChangeDateField = value;
                    this.RaisePropertyChanged("LastChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalPersonType {
            get {
                return this.LegalPersonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalPersonTypeField, value) != true)) {
                    this.LegalPersonTypeField = value;
                    this.RaisePropertyChanged("LegalPersonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCode {
            get {
                return this.NationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalCodeField, value) != true)) {
                    this.NationalCodeField = value;
                    this.RaisePropertyChanged("NationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RegisterApiCallerForm.CompanyServiceReference.Result ParentLegalPerson {
            get {
                return this.ParentLegalPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentLegalPersonField, value) != true)) {
                    this.ParentLegalPersonField = value;
                    this.RaisePropertyChanged("ParentLegalPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisterDate {
            get {
                return this.RegisterDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisterDateField, value) != true)) {
                    this.RegisterDateField = value;
                    this.RaisePropertyChanged("RegisterDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisterNumber {
            get {
                return this.RegisterNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisterNumberField, value) != true)) {
                    this.RegisterNumberField = value;
                    this.RaisePropertyChanged("RegisterNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisterUnit {
            get {
                return this.RegisterUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisterUnitField, value) != true)) {
                    this.RegisterUnitField = value;
                    this.RaisePropertyChanged("RegisterUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Residency {
            get {
                return this.ResidencyField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidencyField, value) != true)) {
                    this.ResidencyField = value;
                    this.RaisePropertyChanged("Residency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettleDate {
            get {
                return this.SettleDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SettleDateField, value) != true)) {
                    this.SettleDateField = value;
                    this.RaisePropertyChanged("SettleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyServiceReference.ILegalPersonService")]
    public interface ILegalPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByNationalCode", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNationalCodeResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquiryByNationalCode(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByNationalCode", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNationalCodeResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNationalCodeAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByName", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNameResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquiryByName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByName", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNameResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByArchiveName", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByArchiveNameResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquiryByArchiveName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByArchiveName", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByArchiveNameResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByArchiveNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateOnlyByNationalCode", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateOnlyByNationalCodeResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result ValidateOnlyByNationalCode(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateOnlyByNationalCode", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateOnlyByNationalCodeResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateOnlyByNationalCodeAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateOnlyByName", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateOnlyByNameResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result ValidateOnlyByName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateOnlyByName", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateOnlyByNameResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateOnlyByNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateOnlyByArchiveName", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateOnlyByArchiveNameResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result ValidateOnlyByArchiveName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateOnlyByArchiveName", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateOnlyByArchiveNameResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateOnlyByArchiveNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateCompareNationalCodeAndName", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateCompareNationalCodeAndNameResponse" +
            "")]
        RegisterApiCallerForm.CompanyServiceReference.Result ValidateCompareNationalCodeAndName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/ValidateCompareNationalCodeAndName", ReplyAction="http://tempuri.org/ILegalPersonService/ValidateCompareNationalCodeAndNameResponse" +
            "")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateCompareNationalCodeAndNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquirySpecialByNationalCode", ReplyAction="http://tempuri.org/ILegalPersonService/InquirySpecialByNationalCodeResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquirySpecialByNationalCode(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquirySpecialByNationalCode", ReplyAction="http://tempuri.org/ILegalPersonService/InquirySpecialByNationalCodeResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquirySpecialByNationalCodeAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquirySpecialByName", ReplyAction="http://tempuri.org/ILegalPersonService/InquirySpecialByNameResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquirySpecialByName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquirySpecialByName", ReplyAction="http://tempuri.org/ILegalPersonService/InquirySpecialByNameResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquirySpecialByNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquirySpecialByArchiveName", ReplyAction="http://tempuri.org/ILegalPersonService/InquirySpecialByArchiveNameResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquirySpecialByArchiveName(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquirySpecialByArchiveName", ReplyAction="http://tempuri.org/ILegalPersonService/InquirySpecialByArchiveNameResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquirySpecialByArchiveNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByNationalCodeForSpecificUnit", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNationalCodeForSpecificUnitRespon" +
            "se")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquiryByNationalCodeForSpecificUnit(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByNationalCodeForSpecificUnit", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNationalCodeForSpecificUnitRespon" +
            "se")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNationalCodeForSpecificUnitAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByNameForSpecificUnit", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNameForSpecificUnitResponse")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquiryByNameForSpecificUnit(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByNameForSpecificUnit", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByNameForSpecificUnitResponse")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNameForSpecificUnitAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByArchiveNameForSpecificUnit", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByArchiveNameForSpecificUnitRespons" +
            "e")]
        RegisterApiCallerForm.CompanyServiceReference.Result InquiryByArchiveNameForSpecificUnit(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegalPersonService/InquiryByArchiveNameForSpecificUnit", ReplyAction="http://tempuri.org/ILegalPersonService/InquiryByArchiveNameForSpecificUnitRespons" +
            "e")]
        System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByArchiveNameForSpecificUnitAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILegalPersonServiceChannel : RegisterApiCallerForm.CompanyServiceReference.ILegalPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LegalPersonServiceClient : System.ServiceModel.ClientBase<RegisterApiCallerForm.CompanyServiceReference.ILegalPersonService>, RegisterApiCallerForm.CompanyServiceReference.ILegalPersonService {
        
        public LegalPersonServiceClient() {
        }
        
        public LegalPersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LegalPersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegalPersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegalPersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquiryByNationalCode(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNationalCode(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNationalCodeAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNationalCodeAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquiryByName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquiryByArchiveName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByArchiveName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByArchiveNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByArchiveNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result ValidateOnlyByNationalCode(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateOnlyByNationalCode(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateOnlyByNationalCodeAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateOnlyByNationalCodeAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result ValidateOnlyByName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateOnlyByName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateOnlyByNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateOnlyByNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result ValidateOnlyByArchiveName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateOnlyByArchiveName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateOnlyByArchiveNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateOnlyByArchiveNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result ValidateCompareNationalCodeAndName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateCompareNationalCodeAndName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> ValidateCompareNationalCodeAndNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.ValidateCompareNationalCodeAndNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquirySpecialByNationalCode(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquirySpecialByNationalCode(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquirySpecialByNationalCodeAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquirySpecialByNationalCodeAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquirySpecialByName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquirySpecialByName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquirySpecialByNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquirySpecialByNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquirySpecialByArchiveName(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquirySpecialByArchiveName(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquirySpecialByArchiveNameAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquirySpecialByArchiveNameAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquiryByNationalCodeForSpecificUnit(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNationalCodeForSpecificUnit(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNationalCodeForSpecificUnitAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNationalCodeForSpecificUnitAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquiryByNameForSpecificUnit(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNameForSpecificUnit(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByNameForSpecificUnitAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByNameForSpecificUnitAsync(param);
        }
        
        public RegisterApiCallerForm.CompanyServiceReference.Result InquiryByArchiveNameForSpecificUnit(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByArchiveNameForSpecificUnit(param);
        }
        
        public System.Threading.Tasks.Task<RegisterApiCallerForm.CompanyServiceReference.Result> InquiryByArchiveNameForSpecificUnitAsync(RegisterApiCallerForm.CompanyServiceReference.Parameter param) {
            return base.Channel.InquiryByArchiveNameForSpecificUnitAsync(param);
        }
    }
}
